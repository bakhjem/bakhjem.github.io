{"version":3,"sources":["Networks/ApiService.js","history.js","Action/NovelActions.js","Component/Header.js","Component/Home.js","Component/TopWeakeNovel.js","Component/Genres.js","Component/Footer.js","Container/HomeContainer.js","Component/NovelDetail.js","Container/NovelContainer.js","Component/Chapter.js","Container/ChapterContainer.js","Component/Newupdate.js","Container/NewupdateContainer.js","Component/GenresDetail.js","Container/GenresContainer.js","Component/TopviewNovel.js","Container/TopViewContainer.js","Component/NewestNovel.js","Container/NewestNovelContainer.js","Component/CompletedNovel.js","Container/CompletedContainer.js","Component/Search.js","Container/SearchContainer.js","Router/Routers.js","App.js","serviceWorker.js","Reducer/HomeReducer.js","Reducer/index.js","Store/Store.js","index.js"],"names":["endpoint","createHistory","getAll","api_name","params","callback","_apiUrl","_params","setParams","axios","get","headers","Content-Type","Access-Control-Allow-Origin","then","response","data","catch","error","fetchHome","dispatch","api","type","mangalist","fetchHotnovel","hotnovel","fetchGenres","genres","fetchNovelDetail","noveldetail","fetchNewNovel","newnovel","fetchCompleteNovel","completenovel","fetchSearch","search","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","change_alias","alias","str","toLowerCase","replace","trim","state","q","a","s","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","prevProps","prevState","split","join","console","log","react_default","createElement","Redirect","to","id","className","style","width","Link","title","onSubmit","color","placeholder","onChange","Component","connect","genresdetail","Home","docnhieu","page","rel","length","map","data-tooltip","idnovel","src","cover","alt","novelsname","idchapter","lasterchapter","fontSize","icon","view","des","skeleton","active","avatar","TopWeakeNovel","arr","i","push","key","href","Genres","colspan","class","borderTop","Footer","data-cfemail","HomeContainer","ReactGA","initialize","pageview","initializeReactGA","Helmet","name","content","Component_Header","Component_Home","Component_TopWeakeNovel","Component_Footer","NovelDetail","datagenres","datachapter","othername","genresdata","chapterlist","idnovels","status","author","dateupdate","description","_this2","itemScope","itemType","itemProp","background","concat","backgroundSize","height","opacity","onclick","tag","margin","idgenres","genrename","padding","fontStyle","font","textAlign","float","position","overflowY","maxHeight","overflowX","ReactHtmlParser","chaptername","NovelContainer","match","window","scrollTo","Component_NovelDetail","Chapter","prechap","undefined","nextchap","novelchapter","flexDirection","es_button","theme","loading","ChapterContainer","slug","novelid","chapterid","params1","fetchNovelChapter","Component_Chapter","Newupdate","newupdate","marginBottom","totalpage","parseInt","NewupdateContainer","fetchNewupdate","Component_Newupdate","genresDetail","GenresContainer","fetchGenresDetail","GenresDetail","TopviewNovel","TopViewContainer","Component_TopviewNovel","NewestNovel","NewestNovelContainer","Component_NewestNovel","CompletedNovel","CompletedContainer","Component_CompletedNovel","Search","SearchContainer","Component_Search","Routers","Route","exact","path","component","App","BrowserRouter","Router_Routers","Boolean","location","hostname","initialState","items","item","mangadetail","cate","HomeReducer","arguments","action","objectSpread","combineReducers","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6787c00b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport history from '../history';\r\n\r\nlet endpoint = \"http://3.1.203.88:8001/\";\r\n\r\n/*-----------------------------GET ALL----------------------------------------*/\r\nexport function getAll(api_name, params,callback) {\r\n  let _apiUrl = endpoint + api_name;\r\n  let _params = setParams(params);\r\n  let _headers = {\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      'Access-Control-Allow-Origin':'*'\r\n    }\r\n  };\r\n\r\n\r\n  axios.get(_apiUrl, _params, _headers).then(function(response) {\r\n      callback(response.data);\r\n  }).catch(error => {\r\n    catchError(error);\r\n    // throw(error);\r\n  });\r\n}\r\n\r\n/*-----------------------------GET ONE----------------------------------------*/\r\nexport function getOne(api_name, id, params, callback) {\r\n  let _apiUrl = endpoint + api_name + '/' + id;\r\n  let _params = setParams(params);\r\n  let _headers = {\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      'Access-Control-Allow-Origin':'*'\r\n    }\r\n  };\r\n\r\n  axios.get(_apiUrl, _params, _headers).then(function(response) {\r\n    callback(response.data);\r\n  }).catch(error => {\r\n    throw(error);\r\n  });\r\n}\r\n\r\n\r\n\r\n/*-----------------------------SET PARAMS-------------------------------------*/\r\nexport function setParams(params) {\r\n  let axios_params = {\r\n    params: params\r\n  };\r\n  return axios_params;\r\n}\r\n\r\n\r\nexport function catchError(error) {\r\n  // if(error.response.status === 404) {\r\n  //   history.push(\"#/404\");\r\n  // } else if(error.response.status === 500) {\r\n  //   console.log(error.response);\r\n  //   Modal.error({\r\n  //     title: 'Thông Báo',\r\n  //     content: (error.response.statusText),\r\n  //     onOk: () => {\r\n  //         window.location.reload();\r\n  //     }\r\n  // });\r\n    // history.push(\"#/500\");\r\n  // } else if(error.response.status === 408) {\r\n  //   history.push(\"/login\");\r\n  //   window.location.reload(true);\r\n  // } else if(error.response.status === 401) {\r\n  //   Modal.error({\r\n  //     title: 'Thông Báo',\r\n  //     content: 'Bạn Không có quyền truy cập',\r\n  //     onOk: () => {\r\n  //         window.location.reload();\r\n  //     }\r\n  // });\r\n  // }\r\n\r\n  //window.location.reload(true);\r\n}\r\n","import createHistory from 'history/createBrowserHistory'\r\nexport default createHistory()\r\n","import * as api from '../Networks/ApiService';\r\n\r\n/*------------------------------RETURN----------------------------------------*/\r\nexport const fetchMangeHomeSuccess = (mangalist) => {\r\n  return {\r\n    type: 'FETCH_MANGA_HOME',\r\n    mangalist\r\n  };\r\n};\r\n\r\nexport const fetchHotnovelSuccess = (hotnovel) => {\r\n  return {\r\n    type: 'FETCH_HOT_NOVEL',\r\n    hotnovel\r\n  };\r\n};\r\n\r\nexport const fetchGenresSuccess = (genres) => {\r\n  return {\r\n    type: 'FETCH_GENRES',\r\n    genres\r\n  };\r\n};\r\n\r\nexport const fetchNovelDetailSuccess = (noveldetail) => {\r\n  return {\r\n    type: \"FETCH_NOVEL_DETAIL\",\r\n    noveldetail\r\n  };\r\n};\r\nexport const fetchNovelChapterSuccess = (novelchapter) => {\r\n  return {\r\n    type: \"FETCH_NOVEL_CHAPTER\",\r\n    novelchapter\r\n  };\r\n};\r\nexport const fetchNewupdateSuccess = (newupdate) => {\r\n  return {\r\n    type: \"FETCH_NOVEL_NEW_UPDATE\",\r\n    newupdate\r\n  };\r\n};\r\nexport const fetchGenresDetailSuccess = (genresdetail) => {\r\n  return {\r\n    type: \"FETCH_GENRES_DETAIL\",\r\n    genresdetail\r\n  };\r\n};\r\nexport const fetchNewNovelSuccess = (newnovel) => {\r\n  return {\r\n    type: \"FETCH_NEW_NOVEL\",\r\n    newnovel\r\n  };\r\n};\r\nexport const fetchCompleteNovelSuccess = (completenovel) => {\r\n  return {\r\n    type: \"FETCH_COMPLETED_NOVEL\",\r\n    completenovel\r\n  };\r\n};\r\nexport const fetchSearchSuccess = (search) => {\r\n  return {\r\n    type: \"FETCH_SEARCH_NOVEL\",\r\n    search\r\n  };\r\n};\r\n\r\n\r\n/*------------------------------FETCH----------------------------------------*/\r\nexport const fetchHome = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('update', params, function(response) {\r\n      dispatch(fetchMangeHomeSuccess(response.data))\r\n    });\r\n  };\r\n};\r\nexport const fetchNewupdate = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('update', params, function(response) {\r\n      dispatch(fetchNewupdateSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchHotnovel = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('hotnovel', params, function(response) {\r\n      dispatch(fetchHotnovelSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchGenres = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('genres', params, function(response) {\r\n      dispatch(fetchGenresSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchNovelDetail = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('novel', params, function(response) {\r\n      dispatch(fetchNovelDetailSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchNovelChapter = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('chapter', params, function(response) {\r\n      dispatch(fetchNovelChapterSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchGenresDetail = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('genres', params, function(response) {\r\n      dispatch(fetchGenresDetailSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchNewNovel = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('newest', params, function(response) {\r\n      dispatch(fetchNewNovelSuccess(response))\r\n    });\r\n  };\r\n};\r\nexport const fetchCompleteNovel = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('completed', params, function(response) {\r\n      dispatch(fetchCompleteNovelSuccess(response))\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchSearch = (params) => {\r\n  return (dispatch) => {\r\n    api.getAll('search', params, function(response) {\r\n      dispatch(fetchSearchSuccess(response))\r\n    });\r\n  };\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchSearch } from \"../Action/NovelActions\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      q: '',\r\n      a: '',\r\n      s:''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event){\r\n    this.setState({q: event.target.value});\r\n  }\r\n  handleSubmit(){\r\n    // console.log(112);\r\n    this.setState({a:'1'})\r\n  }\r\n  change_alias = (alias) => {\r\n    var str = alias;\r\n    str = str.toLowerCase();\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,\"a\"); \r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,\"e\"); \r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g,\"i\"); \r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,\"o\"); \r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,\"u\"); \r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,\"y\"); \r\n    str = str.replace(/đ/g,\"d\");\r\n    str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g,\" \");\r\n    str = str.replace(/ + /g,\" \");\r\n    str = str.trim(); \r\n    return str;\r\n  }\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  if(this.state.q !== prevState.q){\r\n    \r\n    this.setState({\r\n      s: this.change_alias(this.state.q).split(' ').join('_')\r\n    })\r\n  }\r\n}\r\n\r\n  \r\n  render() {\r\n    console.log(this.state)\r\n    return (\r\n\r\n      <div>\r\n        {this.state.a === '1' && <Redirect to={'/search/'+this.state.s+'/page/1'} />}\r\n        <div id=\"header\">\r\n          <div className=\"top_header\" style={{width:'100%',}}>\r\n            <Link\r\n              id=\"logo\"\r\n              className=\"logo\"\r\n              to=\"/\"\r\n              title=\"Read novel at Novelonlinefree\"\r\n            >\r\n              YYTRUYEN\r\n              {/* <img style={{width:'330',height:99}} src={require('./V2.jpg')}></img> */}\r\n            </Link>\r\n          </div>\r\n          <div className=\"wrap-menu\">\r\n            <form onSubmit={this.handleSubmit} style={{color:'black'}}>\r\n              <input\r\n                id=\"search_story\"\r\n                type='text'\r\n                placeholder=\"Tìm kiếm  ...\"\r\n                value={this.state.q}\r\n                onChange={this.handleChange}\r\n              />\r\n              {/* <div style={{ display: \"none\" }}>\r\n                <input />\r\n              </div> */}\r\n            </form>\r\n            <ul id=\"menu\" className=\"menu\">\r\n              <li>\r\n                <Link title=\"Novel online\" to=\"/\">\r\n                  Đọc truyện online\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  title=\"Top view novel\"\r\n                  to={'/hotnovel/page/1'}\r\n                >\r\n                  Truyện hot\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  title=\"Completed novel\"\r\n                  to={'/completed/page/1'}\r\n                >\r\n                  Truyện hoàn thành\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    genresdetail: state.Home.genresdetail,\r\n  }),\r\n  { fetchSearch }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchHome,fetchHotnovel } from \"../Action/NovelActions\";\r\nimport { Icon,Skeleton } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          docnhieu: []\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        let params = {\r\n            page: 1\r\n        }\r\n        this.props.fetchHome(params);\r\n        this.props.fetchHotnovel(params);\r\n    }\r\n    \r\n    \r\n    \r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div>\r\n        <div className=\"cotgiua\">\r\n          <div className=\"cotgiua_menu\">\r\n            <Link\r\n              rel=\"nofollow\"\r\n              to={'/updates/page/1'}\r\n              title=\"RECENTLY UPDATED NOVEL\"\r\n              className=\"head_title actived muc_truyen_moi_cap_nhat\"\r\n            >\r\n              Truyện mới\r\n            </Link>\r\n            {/* <Link\r\n              rel=\"nofollow\"\r\n              to={'/completed/page/1'}\r\n              title=\"COMPLETED NOVEL\"\r\n              className=\"head_title muc_truyen_hoan_thanh\"\r\n            >\r\n              COMPLETED\r\n            </Link> */}\r\n            {/* <Link\r\n              rel=\"nofollow\"\r\n              to={'/newnovel/page/1'}\r\n              title=\"NEWEST NOVEL\"\r\n              className=\"head_title\"\r\n            >\r\n              NEWEST\r\n            </Link> */}\r\n            <Link\r\n              rel=\"nofollow\"\r\n              to={'/hotnovel/page/1'}\r\n              title=\"TOP VIEW NOVEL\"\r\n              className=\"head_title\"\r\n            >\r\n              Truyện hot\r\n            </Link>\r\n          </div>\r\n          <div className=\"wrap_update home\">\r\n            <div className=\"daily-update\">\r\n              <h2 className=\"title update-title\" title=\"Recently Updated MANGA\">\r\n                Mới cập nhật\r\n              </h2>\r\n            </div>\r\n            {this.props.mangalist.length !== 0 ?\r\n            this.props.mangalist.map(mangalist => (\r\n              <div className=\"update_item\">\r\n                <div className=\"update_image\">\r\n                  <Link\r\n                    className=\"tooltip\"\r\n                    data-tooltip=\"sticky_5970\"\r\n                    to={'/novel/'+mangalist.idnovel}\r\n                  >\r\n                    <img\r\n                      src={mangalist.cover}\r\n                      alt={mangalist.novelsname}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div className=\"nowrap\">\r\n                  <Link\r\n                    className=\"tooltip\"\r\n                    data-tooltip=\"sticky_5970\"\r\n                    to={'/novel/'+mangalist.idnovel}\r\n                    title= {mangalist.novelsname}\r\n                  >\r\n                    {mangalist.novelsname}\r\n                  </Link>\r\n                  {/* <em>43 minutes ago </em> */}\r\n                </div>\r\n                <Link\r\n                  to={'/novel/'+mangalist.idnovel+'/'+mangalist.idchapter}\r\n                  title={mangalist.lasterchapter}\r\n                  className=\"chapter\"\r\n                >\r\n                  {mangalist.lasterchapter}\r\n                </Link>\r\n                <br />\r\n                <span style={{color: '#6f6f6f',fontSize:13}}><Icon type=\"eye\" /> {mangalist.view}\r\n                </span>\r\n                <p>{mangalist.des}</p>\r\n              </div>\r\n            )): <Skeleton active avatar></Skeleton> }\r\n            <Link to={'/updates/page/1'} title=\"More\" className=\"xemthem\" rel=\"nofollow\">Xem thêm</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    mangalist: state.Home.mangalist,\r\n    hotnovel: state.Home.hotnovel\r\n  }),\r\n  { fetchHome,fetchHotnovel  }\r\n)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchHotnovel } from \"../Action/NovelActions\";\r\n\r\nclass TopWeakeNovel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      docnhieu: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: 1\r\n    };\r\n    this.props.fetchHotnovel(params);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.hotnovel !== prevProps.hotnovel) {\r\n      var arr = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        arr.push({\r\n            key: i,\r\n            novelsname: this.props.hotnovel.data[i].novelsname,\r\n            idnovel: this.props.hotnovel.data[i].idnovel,\r\n            lasterchapter: this.props.hotnovel.data[i].lasterchapter,\r\n        });\r\n      }\r\n      this.setState({ docnhieu: arr });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"doc_nhieu\">\r\n        <h2 className=\"feature_title\">Truyện hot trong tuần</h2>\r\n        <ul>\r\n        {this.state.docnhieu.map((docnhieu,key) => (\r\n          <li>\r\n            <span>{key}</span>{\" \"}\r\n            <a\r\n              href={'/novel/'+docnhieu.idnovel}\r\n              title={docnhieu.novelsname}\r\n              className=\"chapter\"\r\n            >\r\n              {docnhieu.novelsname} - {docnhieu.lasterchapter}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    hotnovel: state.Home.hotnovel\r\n  }),\r\n  { fetchHotnovel }\r\n)(TopWeakeNovel);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchGenres } from \"../Action/NovelActions\";\r\n\r\nclass Genres extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchGenres({})\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.genres)\r\n        return (\r\n                <table className=\"theloai\">\r\n                <tbody>\r\n                <tr><td colspan=\"3\"><span class=\"feature_title\">GENRES</span></td></tr>\r\n                <tr className='flex-genres' style={{borderTop: 2}}>\r\n                {/* {this.props.genres.map(genres => (\r\n                    <td><Link className=\"theloai_select\" to={'/genres/'+genres.idgenres+'/page/1'} title={genres.genrename}>{genres.genrename}</Link></td>\r\n                ))} */}\r\n                </tr>\r\n                </tbody>\r\n                </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        genres: state.Home.genres\r\n    }),\r\n    { fetchGenres }\r\n  )(Genres);","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"footer\">\r\n          <div className=\"footer_btm\">\r\n            <div className=\"foot-link\">\r\n              <div className=\"link-group\">\r\n                <ul>\r\n                  <li>\r\n                    <a href=\"/\" title=\"Read novel online\">\r\n                     Đọc truyện online\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/\" title=\"Read novel\">\r\n                      Đọc truyện\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"clearfix\" />\r\n            </div>\r\n            <div className=\"footer_top_content\">\r\n              <p>\r\n                Đọc truyện ngôn tình, kiếm hiệp, xuyên không và nhiều thể loại khác tại yytruyen.com\r\n              </p>\r\n              <p>\r\n                Email:{\" \"}\r\n                <a\r\n                  href=\"/cdn-cgi/l/email-protection\"\r\n                  className=\"__cf_email__\"\r\n                  data-cfemail=\"2e1c1a195a5c5b574b406e49434f4742004d4143\"\r\n                >\r\n                  bakhjem@gmail.com\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Header from '../Component/Header';\r\nimport Home from '../Component/Home';\r\nimport TopWeakeNovel from '../Component/TopWeakeNovel';\r\nimport Genres from '../Component/Genres';\r\nimport Footer from '../Component/Footer';\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\n\r\nclass HomeContainer extends Component {\r\n\r\n  initializeReactGA() {\r\n    ReactGA.initialize('UA-142539435-1');\r\n    ReactGA.pageview('/homepage');\r\n  }\r\n  componentDidMount() {\r\n    this.initializeReactGA();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Đọc truyện online - YYtruyen.com</title>\r\n          <meta name=\"description\" content=\"Đọc truyện miễn phí, cập nhật nhanh nhất các truyện ngôn tình, truyện kiếm hiệp, xuyên không, sủng, ngược và nhiều thể loại khác\" />\r\n          <meta name=\"theme-color\" content=\"#008f68\" />\r\n          <meta name=\"keywords\" content=\"đọc truyện, đọc truyện online, truyện ngôn tình, truyện kiếm hiệp, xuyên không\" />\r\n        </Helmet>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <Home />\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchNovelDetail } from \"../Action/NovelActions\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Tag, Skeleton } from 'antd';\r\n\r\nclass NovelDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datagenres: [],\r\n      datachapter: [],\r\n      cover: '',\r\n      novelsname: '',\r\n      othername: '',\r\n      view: ''\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.noveldetail !== prevProps.noveldetail) {\r\n      this.setState({\r\n        datagenres: this.props.noveldetail.genresdata,\r\n        datachapter: this.props.noveldetail.chapterlist,\r\n        cover: this.props.noveldetail.cover,\r\n        novelsname: this.props.noveldetail.novelsname,\r\n        othername: this.props.noveldetail.othername,\r\n        idnovels: this.props.noveldetail.idnovels,\r\n        status: this.props.noveldetail.status,\r\n        author: this.props.noveldetail.author,\r\n        dateupdate: this.props.noveldetail.dateupdate,\r\n        description: this.props.noveldetail.description,\r\n        view: this.props.noveldetail.view,\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"cotgiua\">\r\n        <div className=\"hfeed truyen_info_wrapper\">\r\n          <div className=\"breadcrumb breadcrumbs\">\r\n            <div className=\"rdfa-breadcrumb\">\r\n              <div>\r\n                <p>\r\n                  <span className=\"breadcrumbs-title\" />\r\n                  <span\r\n                    itemScope\r\n                    itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                  >\r\n                    <a\r\n                      itemProp=\"url\"\r\n                      href=\"/\"\r\n                      className=\"home\"\r\n                      title=\"Đọc truyện online\"\r\n                    >\r\n                      <span itemProp=\"title\">Đọc truyện online</span>\r\n                    </a>\r\n                  </span>\r\n                  <span className=\"separator\">»</span>\r\n                  <span\r\n                    itemScope\r\n                    itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                  >\r\n                    <a\r\n                      itemProp=\"url\"\r\n                      href={\"/novel/\" + this.state.idnovels}\r\n                      title={this.state.novelsname}\r\n                    >\r\n                      <span itemProp=\"title\">\r\n                        {this.state.novelsname}\r\n                      </span>\r\n                    </a>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {this.state.datachapter.length !== 0 ?\r\n            <div className=\"hentry truyen_info\">\r\n              <div className=\"entry-header\">\r\n                <div className=\"truyen_if_wrap\">\r\n                  <div className=\"truyen_info_left\">\r\n                    <span\r\n                      className=\"info_image\"\r\n                      style={{\r\n                        background: `url(${\r\n                          this.state.cover\r\n                          })  center center no-repeat`,\r\n                        backgroundSize: \"contain\"\r\n                      }}\r\n                      title={this.state.novelsname}\r\n                    >\r\n                      <img\r\n                        width={173}\r\n                        height={250}\r\n                        src={this.state.cover}\r\n                        className=\"attachment-large size-large wp-post-image\"\r\n                        alt={this.state.novelsname}\r\n                        title={this.state.novelsname}\r\n                        style={{ opacity: 0 }}\r\n                      />\r\n                    </span>\r\n                    <Link to={'#list_chapter'}>\r\n                      <span\r\n                        onclick=\"movetolistchapter();\"\r\n                        className=\"btn_theodoi btn_list_chapter\"\r\n\r\n                      >\r\n                        Danh sách chương\r\n                  </span>\r\n                    </Link>\r\n                  </div>\r\n                  <ul className=\"truyen_info_right\">\r\n                    {/* <li> */}\r\n                    <h1 className=\"entry-title\">\r\n                      <span>{this.state.novelsname}</span>\r\n                    </h1>\r\n                    {/* <span\r\n                      style={{\r\n                        font: \"400 14px Open Sans, Tahoma, Geneva, sans-serif\"\r\n                      }}\r\n                    >\r\n                      {this.state.view}\r\n                    </span>{\" \"} */}\r\n                  {/* </li> */}\r\n                  <li></li>\r\n                  <li>\r\n                    <span>Tác giả: </span>\r\n                      {this.state.author}\r\n                  </li>\r\n                    <li>\r\n                      <span>Thể loại: </span>\r\n                      {this.state.datagenres.map(genresdata => (\r\n                        <Tag color=\"#f50\" style={{ margin: 2 }}>\r\n                          <a style={{ color: 'white' }} rel=\"nofollow\" href={\"/genres/\" + genresdata.idgenres + '/page/1'}>\r\n                            {genresdata.genrename}\r\n                          </a>\r\n                        </Tag>\r\n                      ))}\r\n                    </li>\r\n                    <li>\r\n                      <span>Tình trạng : </span>\r\n                      {this.state.status}\r\n                    </li>\r\n                    <li>\r\n                    <span>view : </span>\r\n                    <em\r\n                      className=\"entry-meta\"\r\n                      style={{ padding: 0, fontStyle: \"initial\" }}\r\n                    >\r\n                      <em className=\"date updated\">\r\n                        {this.state.view}\r\n                      </em>\r\n                    </em>\r\n                  </li>\r\n                  </ul>\r\n                </div>\r\n                <div\r\n                  id=\"noidungm\"\r\n                  style={{\r\n                    font: \"400 14px Open Sans, Tahoma, Geneva, sans-serif\",\r\n                    color: \"#3e3e3e\",\r\n                    width: \"100%\",\r\n                    padding: \"10px 2%\",\r\n                    background: \"#FFF\",\r\n                    textAlign: \"justify\",\r\n                    borderTop: \"1px dashed #ff530d\",\r\n                    float: \"left\",\r\n                    height: \"100%\",\r\n                    position: \"relative\",\r\n                    overflowY: \"auto\",\r\n                    maxHeight: \"100%\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  <h2>\r\n                    {/* <p style={{ color: \"red\" }}>\r\n                      {this.state.novelsname} summary:\r\n                  </p> */}\r\n                  </h2>\r\n                  {ReactHtmlParser(this.state.description)}\r\n                  {/* {this.state.description} */}\r\n                </div>\r\n                <div style={{ width: \"100%\", textAlign: \"center\" }} />\r\n                <div id=\"list_chapter\" className=\"list_chapter\">\r\n                  <div className=\"row title-list-chapter\">\r\n                    <h2 className=\"h2-manga\">\r\n                      Danh sách chương\r\n                  </h2>\r\n                  </div>\r\n                  <div className=\"chapter-list\">\r\n                    {this.state.datachapter.map(datachapter => (\r\n                      <div className=\"row\">\r\n                        <span><a href={'/novel/' + this.state.idnovels + '/' + datachapter.idchapter} title={datachapter.chaptername}>{datachapter.chaptername}</a></span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> :\r\n            <div className=\"hentry truyen_info\" style={{background:'white',float:'left'}}>\r\n              <Skeleton active avatar></Skeleton>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    noveldetail: state.Home.noveldetail\r\n  }),\r\n  { fetchNovelDetail }\r\n)(NovelDetail);\r\n","import React, { Component } from \"react\";\r\nimport Header from '../Component/Header';\r\nimport Home from '../Component/Home';\r\nimport TopWeakeNovel from '../Component/TopWeakeNovel';\r\nimport Genres from '../Component/Genres';\r\nimport Footer from '../Component/Footer';\r\nimport NovelDetail from \"../Component/NovelDetail\";\r\nimport { fetchNovelDetail } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass NovelContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    initializeReactGA() {\r\n      ReactGA.initialize('UA-142539435-1');\r\n      ReactGA.pageview(`/novel/${this.props.match.params.id}`);\r\n    }\r\n    componentDidMount() {\r\n        let params = {\r\n            id: this.props.match.params.id\r\n        }\r\n        this.props.fetchNovelDetail(params);\r\n        window.scrollTo(0,0);\r\n        this.initializeReactGA();\r\n    }\r\n    \r\n  render() {\r\n      console.log(this.props)\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{`Đọc ${this.props.noveldetail.novelsname}`} - YYtruyen</title>\r\n          {this.props.noveldetail.description !== null ?\r\n          <meta name=\"description\" content={this.props.noveldetail.description} /> : <meta name=\"description\" content={`Đọc truyện ${this.props.noveldetail.novelsname} online free tại yytruyen.com`} /> }\r\n          <meta name=\"theme-color\" content=\"#008f68\" />\r\n          <meta name=\"keywords\" content=\"đọc truyện online, truyện online, truyện ngôn tình, truyện kiếm hiệp, truyện ngược, sủng\" />\r\n        </Helmet>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n            <NovelDetail></NovelDetail>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n      noveldetail: state.Home.noveldetail\r\n    }),\r\n    { fetchNovelDetail }\r\n  )(NovelContainer);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchGenres } from \"../Action/NovelActions\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Skeleton, Card, Button, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass Chapter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prechap: undefined,\r\n      nextchap: undefined\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.prechap === undefined) {\r\n      if (this.props.noveldetail.chapterlist !== undefined) {\r\n        if (this.props.noveldetail.chapterlist.length === 1) {\r\n          return this.setState({ prechap: \"\", nextchap: \"\" });\r\n        }\r\n        for (let i = 0; i < this.props.noveldetail.chapterlist.length; i++) {\r\n          if (\r\n            this.props.novelchapter.idchapter ===\r\n            this.props.noveldetail.chapterlist[i].idchapter\r\n          ) {\r\n            if (i === 0) {\r\n              this.setState({\r\n                prechap: \"\",\r\n                nextchap: this.props.noveldetail.chapterlist[i + 1].idchapter\r\n              });\r\n            }\r\n            if (i > 0 && i < this.props.noveldetail.chapterlist.length - 1) {\r\n              this.setState({\r\n                prechap: this.props.noveldetail.chapterlist[i - 1].idchapter,\r\n                nextchap: this.props.noveldetail.chapterlist[i + 1].idchapter\r\n              });\r\n            }\r\n            if (i === this.props.noveldetail.chapterlist.length - 1) {\r\n              this.setState({\r\n                prechap: this.props.noveldetail.chapterlist[i - 1].idchapter,\r\n                nextchap: \"\"\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs breadcrumbs_doc\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span>\r\n                  <Link to=\"/\" title=\"Đọc truyện online\" className=\"home\">\r\n                    Đọc truyện online\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span>\r\n                  <Link\r\n                    to={\"/novel/\" + this.props.novelchapter.idnovels}\r\n                    className=\"home\"\r\n                  >\r\n                    {this.props.novelchapter.novelsname}\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{\" \"}\r\n                {this.props.novelchapter.chaptername}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"menu_doc\" style={{ flexDirection: 'row', padding: 10 }}>\r\n        <Link style={{ color: 'white' }} to={'/novel/' + this.props.novelchapter.idnovels}>\r\n            <Button type=\"primary\" style={{ margin: 5 }}>\r\n              <Icon type=\"book\" theme=\"twoTone\" />\r\n              Danh sách chương\r\n            </Button>\r\n            </Link>\r\n            {this.state.prechap !== \"\" && (\r\n              <a\r\n              rel=\"nofollow\"\r\n              style={{ color: 'white' }}\r\n              // className=\"btn_theodoi btn_doc\"\r\n              href={'/novel/' + this.props.novelchapter.idnovels + '/' + this.state.prechap}\r\n            >\r\n              <Button type=\"primary\" style={{ margin: 5 }}>\r\n                <Icon type=\"double-left\" />\r\n                \r\n                  Chương trước\r\n              \r\n              </Button>\r\n              </a>\r\n            )}\r\n            {this.state.nextchap !== \"\" && (\r\n              <a\r\n              rel=\"nofollow\"\r\n              // className=\"btn_theodoi btn_doc\"\r\n              style={{ color: 'white' }}\r\n              href={'/novel/' + this.props.novelchapter.idnovels + '/' + this.state.nextchap}\r\n            >\r\n              <Button type=\"primary\" style={{ margin: 5 }}>\r\n                Chương sau\r\n              \r\n              <Icon type=\"double-right\" />\r\n              </Button>\r\n              </a>\r\n            )}\r\n          </div>\r\n        <div className=\"hentry\">\r\n          <h1 className=\"name_chapter entry-title\">{this.props.novelchapter.chaptername}</h1>\r\n          <div className=\"entry-content\">\r\n            <div id=\"vung_doc\" className=\"vung_doc\">\r\n              {this.props.novelchapter.content !== undefined ?\r\n                ReactHtmlParser(this.props.novelchapter.content)\r\n                : <Skeleton loading={true} active />\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"menu_doc\" style={{ flexDirection: 'row', padding: 10 }}>\r\n          <Link style={{ color: 'white' }} to={'/novel/' + this.props.novelchapter.idnovels}>\r\n            <Button type=\"primary\" style={{ margin: 5 }}>\r\n              <Icon type=\"book\" theme=\"twoTone\" />\r\n              Danh sách chương\r\n            </Button>\r\n            </Link>\r\n            {this.state.prechap !== \"\" && (\r\n              <a\r\n              rel=\"nofollow\"\r\n              style={{ color: 'white' }}\r\n              // className=\"btn_theodoi btn_doc\"\r\n              href={'/novel/' + this.props.novelchapter.idnovels + '/' + this.state.prechap}\r\n            >\r\n              <Button type=\"primary\" style={{ margin: 5 }}>\r\n                <Icon type=\"double-left\" />\r\n                \r\n                  Chương trước\r\n              \r\n              </Button>\r\n              </a>\r\n            )}\r\n            {this.state.nextchap !== \"\" && (\r\n              <a\r\n              rel=\"nofollow\"\r\n              // className=\"btn_theodoi btn_doc\"\r\n              style={{ color: 'white' }}\r\n              href={'/novel/' + this.props.novelchapter.idnovels + '/' + this.state.nextchap}\r\n            >\r\n              <Button type=\"primary\" style={{ margin: 5 }}>\r\n                \r\n                  Chương sau\r\n              \r\n              <Icon type=\"double-right\" />\r\n              </Button>\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    novelchapter: state.Home.novelchapter,\r\n    noveldetail: state.Home.noveldetail\r\n  }),\r\n  { fetchGenres }\r\n)(Chapter);\r\n","import React, { Component } from \"react\";\r\nimport Header from '../Component/Header';\r\nimport Home from '../Component/Home';\r\nimport TopWeakeNovel from '../Component/TopWeakeNovel';\r\nimport Genres from '../Component/Genres';\r\nimport Footer from '../Component/Footer';\r\nimport NovelDetail from \"../Component/NovelDetail\";\r\nimport { fetchNovelChapter,fetchNovelDetail } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chapter from \"../Component/Chapter\";\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass ChapterContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    initializeReactGA() {\r\n        ReactGA.initialize('UA-142539435-1');\r\n        ReactGA.pageview(`/novel/${this.props.match.params.slug}/${this.props.match.params.id}`);\r\n      }\r\n    componentDidMount() {\r\n        let params = {\r\n            novelid: this.props.match.params.slug,\r\n            chapterid: this.props.match.params.id\r\n        }\r\n        let params1 = {\r\n            id: this.props.match.params.slug\r\n        }\r\n        this.props.fetchNovelChapter(params);\r\n        this.props.fetchNovelDetail(params1);\r\n        window.scrollTo(0,0);\r\n        this.initializeReactGA();\r\n    }\r\n    \r\n  render() {\r\n      console.log(this.props)\r\n    return (\r\n      <div id='trang_doc'>\r\n      <Helmet>\r\n          <title>{`Đọc ${this.props.novelchapter.chaptername}`} - YYtruyen</title>\r\n          <meta name=\"description\" content={`Đọc truyện ${this.props.novelchapter.chaptername} online free tại yytruyen.com, cập nhật các chương mới nhất của truyện này tại đây nhé`}/>\r\n          <meta name=\"theme-color\" content=\"#008f68\" />\r\n          <meta name=\"keywords\" content=\"đọc truyện online, truyện online, truyện ngôn tình, truyện kiếm hiệp, truyện ngược, sủng\" />\r\n        </Helmet>\r\n        <Header />\r\n        <Chapter></Chapter>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        novelchapter: state.Home.novelchapter\r\n    }),\r\n    { fetchNovelChapter,fetchNovelDetail }\r\n  )(ChapterContainer);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchHome } from \"../Action/NovelActions\";\r\nimport { Skeleton,Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass Newupdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.newupdate !== prevProps.newupdate) {\r\n      this.setState({ data: this.props.newupdate.data })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Đọc truyện online\"\r\n                  >\r\n                    <span itemProp=\"title\">Đọc truyện online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/update/' + this.props.newupdate.page}\r\n                  >\r\n                    <span itemProp=\"title\">Latest</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/update/' + this.props.newupdate.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.newupdate.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10 }}>\r\n          {this.state.data.length !== 0 ?\r\n            this.state.data.map(data => (\r\n              <div className=\"update_item list_category\" title={data.novelsname}>\r\n                <Link rel=\"nofollow\" to={'/novel/' + data.idnovel} title={'/novel/' + data.novelsname}>\r\n                  <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n                </Link>\r\n                <h3 className=\"nowrap\">\r\n                  <Link to={'/novel/' + data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n                </h3>\r\n                <Link to={'/novel/' + data.idnovel + '/' + data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n                <span><Icon type=\"eye\" /> {data.view}</span>\r\n                <p>{data.des}</p>\r\n              </div>\r\n            )) : <Skeleton active></Skeleton>\r\n          }\r\n          {/* <div className=\"clearfix\"></div> */}\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n          {this.props.newupdate.page !== this.props.newupdate.totalpage &&\r\n            <a href={'/updates/page/' + (parseInt(this.props.newupdate.page) + 1)} class=\"quantitychapter\">Trang sau</a>\r\n          }\r\n          {this.props.newupdate.page !== '1' &&\r\n            <a href={'/updates/page/' + (parseInt(this.props.newupdate.page) - 1)} class=\"page\">Trang trước</a>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    newupdate: state.Home.newupdate,\r\n  }),\r\n  { fetchHome }\r\n)(Newupdate);\r\n","import React, { Component } from \"react\";\r\nimport { fetchNewupdate } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport Newupdate from \"../Component/Newupdate\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\n\r\nclass NewupdateContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: this.props.match.params.id\r\n    };\r\n    this.props.fetchNewupdate(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <Newupdate />\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    newupdate: state.Home.newupdate\r\n  }),\r\n  { fetchNewupdate }\r\n)(NewupdateContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchHome } from \"../Action/NovelActions\";\r\nimport { Tag, Skeleton,Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass genresDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.genresdetail !== prevProps.genresdetail){\r\n            this.setState({data: this.props.genresdetail.data})\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n  render() {\r\n      console.log(this.props);\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Đọc truyện online\"\r\n                  >\r\n                    <span itemProp=\"title\">Đọc truyện online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/update/'+this.props.genresdetail.page}\r\n                  >\r\n                    <span itemProp=\"title\">Latest</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/update/'+this.props.genresdetail.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.genresdetail.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10}}>\r\n        {this.state.data.map(data => (\r\n            <div className=\"update_item list_category\" title={data.novelsname}>\r\n            <Link rel=\"nofollow\" to={'/novel/'+data.idnovel} title={'/novel/'+data.novelsname}>\r\n              <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n            </Link>\r\n            <h3 className=\"nowrap\">\r\n              <Link to={'/novel/'+data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n            </h3>\r\n            <Link to={'/novel/'+data.idnovel+'/'+data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n            <span><Icon type=\"eye\" /> {data.view}</span>\r\n                <p>{data.des}</p>\r\n          </div>\r\n        ))}\r\n        <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n        {this.props.genresdetail.page !== this.props.genresdetail.totalpage &&\r\n        <a href={'/genres/'+this.props.id+'/page/'+(parseInt(this.props.genresdetail.page)+1)} class=\"quantitychapter\">Trang trước</a>\r\n        }\r\n        {this.props.genresdetail.page !== '1' &&\r\n        <a href={'/genres/'+this.props.id+'/page/'+(parseInt(this.props.genresdetail.page)-1)} class=\"page\">Trang sau</a>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    genresdetail: state.Home.genresdetail,\r\n  }),\r\n  { fetchHome }\r\n)(genresDetail);\r\n","import React, { Component } from \"react\";\r\nimport { fetchGenresDetail } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\nimport GenresDetail from \"../Component/GenresDetail\";\r\n\r\nclass GenresContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: this.props.match.params.id,\r\n      id: this.props.match.params.slug\r\n    };\r\n    this.props.fetchGenresDetail(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <GenresDetail id={this.props.match.params.slug} />\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    genresdetail: state.Home.genresdetail,\r\n  }),\r\n  { fetchGenresDetail }\r\n)(GenresContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchHotnovel } from \"../Action/NovelActions\";\r\nimport { Skeleton, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass TopviewNovel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.hotnovel !== prevProps.hotnovel) {\r\n      this.setState({ data: this.props.hotnovel.data })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Đọc truyện online\"\r\n                  >\r\n                    <span itemProp=\"title\">Đọc truyện online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/hotnovel/' + this.props.hotnovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">Truyện Hot</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/hotnovel/' + this.props.hotnovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.hotnovel.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10 }}>\r\n          {this.state.data.length !== 0 ?\r\n            this.state.data.map(data => (\r\n              <div className=\"update_item list_category\" title={data.novelsname}>\r\n                <Link rel=\"nofollow\" to={'/novel/' + data.idnovel} title={'/novel/' + data.novelsname}>\r\n                  <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n                </Link>\r\n                <h3 className=\"nowrap\">\r\n                  <Link to={'/novel/' + data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n                </h3>\r\n                <Link to={'/novel/' + data.idnovel + '/' + data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n                <span><Icon type=\"eye\" /> {data.view}</span>\r\n                <p>{data.des}</p>\r\n              </div>\r\n            )) : <Skeleton active></Skeleton>\r\n          }\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n          {this.props.hotnovel.page !== this.props.hotnovel.totalpage &&\r\n            <a href={'/hotnovel/page/' + (parseInt(this.props.hotnovel.page) + 1)} class=\"quantitychapter\">Trang sau</a>\r\n          }\r\n          {this.props.hotnovel.page !== '1' &&\r\n            <a href={'/hotnovel/page/' + (parseInt(this.props.hotnovel.page) - 1)} class=\"page\">Trang trước</a>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    hotnovel: state.Home.hotnovel\r\n  }),\r\n  { fetchHotnovel }\r\n)(TopviewNovel);\r\n","import React, { Component } from \"react\";\r\nimport { fetchHotnovel } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\nimport GenresDetail from \"../Component/GenresDetail\";\r\nimport TopviewNovel from \"../Component/TopviewNovel\";\r\n\r\nclass TopViewContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: this.props.match.params.id,\r\n    };\r\n    this.props.fetchHotnovel(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <TopviewNovel />\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            {/* <TopWeakeNovel /> */}\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    hotnovel: state.Home.hotnovel\r\n  }),\r\n  { fetchHotnovel }\r\n)(TopViewContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchNewNovel } from \"../Action/NovelActions\";\r\n\r\nclass NewestNovel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.newnovel !== prevProps.newnovel){\r\n            this.setState({data: this.props.newnovel.data})\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Read novel online\"\r\n                  >\r\n                    <span itemProp=\"title\">Read novel online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/newnovel/'+this.props.newnovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">Latest</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/update/'+this.props.newnovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.newnovel.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10}}>\r\n        {this.state.data.map(data => (\r\n            <div className=\"update_item list_category\" title={data.novelsname}>\r\n            <Link rel=\"nofollow\" to={'/novel/'+data.idnovel} title={'/novel/'+data.novelsname}>\r\n              <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n            </Link>\r\n            <h3 className=\"nowrap\">\r\n              <Link to={'/novel/'+data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n            </h3>\r\n            <Link to={'/novel/'+data.idnovel+'/'+data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n            {/* <span>Last updated : 21-Jan-2019 06:29</span>\r\n            <span>View : 13,396</span> */}\r\n          </div>\r\n        ))}\r\n        <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n        {this.props.newnovel.page !== this.props.newnovel.totalpage &&\r\n        <a href={'/newnovel/page/'+(parseInt(this.props.newnovel.page)+1)} class=\"quantitychapter\">Next page</a>\r\n        }\r\n        {this.props.newnovel.page !== '1' &&\r\n        <a href={'/newnovel/page/'+(parseInt(this.props.newnovel.page)-1)} class=\"page\">Pre page</a>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    newnovel: state.Home.newnovel,\r\n  }),\r\n  { fetchNewNovel }\r\n)(NewestNovel);\r\n","import React, { Component } from \"react\";\r\nimport { fetchNewNovel } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport Newupdate from \"../Component/Newupdate\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\nimport NewestNovel from \"../Component/NewestNovel\";\r\n\r\nclass NewestNovelContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: this.props.match.params.id\r\n    };\r\n    this.props.fetchNewNovel(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <NewestNovel />\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    newnovel: state.Home.newnovel,\r\n  }),\r\n  { fetchNewNovel }\r\n)(NewestNovelContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCompleteNovel } from \"../Action/NovelActions\";\r\n\r\nclass CompletedNovel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.completenovel !== prevProps.completenovel){\r\n            this.setState({data: this.props.completenovel.data})\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Đọc truyện online\"\r\n                  >\r\n                    <span itemProp=\"title\">Đọc truyện online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/completed/'+this.props.completenovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">Latest</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/completed/'+this.props.completenovel.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.completenovel.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10}}>\r\n        {this.state.data.map(data => (\r\n            <div className=\"update_item list_category\" title={data.novelsname}>\r\n            <Link rel=\"nofollow\" to={'/novel/'+data.idnovel} title={'/novel/'+data.novelsname}>\r\n              <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n            </Link>\r\n            <h3 className=\"nowrap\">\r\n              <Link to={'/novel/'+data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n            </h3>\r\n            <Link to={'/novel/'+data.idnovel+'/'+data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n            {/* <span>Last updated : 21-Jan-2019 06:29</span>\r\n            <span>View : 13,396</span> */}\r\n          </div>\r\n        ))}\r\n        <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n        {this.props.completenovel.page !== this.props.completenovel.totalpage &&\r\n        <a href={'/completed/page/'+(parseInt(this.props.completenovel.page)+1)} class=\"quantitychapter\">Trang sau</a>\r\n        }\r\n        {this.props.completenovel.page !== '1' &&\r\n        <a href={'/completed/page/'+(parseInt(this.props.completenovel.page)-1)} class=\"page\">Trang trước</a>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    completenovel: state.Home.completenovel,\r\n  }),\r\n  { fetchCompleteNovel }\r\n)(CompletedNovel);\r\n","import React, { Component } from \"react\";\r\nimport { fetchCompleteNovel } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport Newupdate from \"../Component/Newupdate\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\nimport CompletedNovel from \"../Component/CompletedNovel\";\r\n\r\nclass CompletedContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      page: this.props.match.params.id\r\n    };\r\n    this.props.fetchCompleteNovel(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <CompletedNovel />\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    completenovel: state.Home.completenovel,\r\n  }),\r\n  { fetchCompleteNovel }\r\n)(CompletedContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchSearch } from \"../Action/NovelActions\";\r\nimport { Tag, Skeleton,Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.search !== prevProps.search){\r\n            this.setState({data: this.props.search.data})\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state)\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumb breadcrumbs\">\r\n          <div className=\"rdfa-breadcrumb\">\r\n            <div>\r\n              <p>\r\n                <span className=\"breadcrumbs-title\" />\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <a\r\n                    itemProp=\"url\"\r\n                    href=\"/\"\r\n                    className=\"home\"\r\n                    title=\"Đọc truyện online\"\r\n                  >\r\n                    <span itemProp=\"title\">Đọc truyện online</span>\r\n                  </a>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/search/'+this.props.search.search+'/page/'+this.props.search.page}\r\n                  >\r\n                    <span itemProp=\"title\">Latest</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>\r\n                <span\r\n                  itemScope\r\n                  itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                >\r\n                  <Link\r\n                    itemProp=\"url\"\r\n                    to={'/search/'+this.props.search.page}\r\n                  >\r\n                    <span itemProp=\"title\">All</span>\r\n                  </Link>\r\n                </span>\r\n                <span className=\"separator\">»</span>{this.props.search.page} page\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrap_update tab_anh_dep danh_sach\" style={{ marginBottom: 10}}>\r\n          {this.state.data.length !== 0 ?\r\n        this.state.data.map(data => (\r\n            <div className=\"update_item list_category\" title={data.novelsname}>\r\n            <Link rel=\"nofollow\" to={'/novel/'+data.idnovel} title={'/novel/'+data.novelsname}>\r\n              <img src={data.cover} alt={data.novelsname} title={data.novelsname} />\r\n            </Link>\r\n            <h3 className=\"nowrap\">\r\n              <Link to={'/novel/'+data.idnovel} title={data.novelsname} >{data.novelsname} </Link>\r\n            </h3>\r\n            <Link to={'/novel/'+data.idnovel+'/'+data.idchapter} title={data.lasterchapter} className=\"chapter\">{data.lasterchapter}</Link>\r\n            <span><Icon type=\"eye\" /> {data.view}</span>\r\n                <p>{data.des}</p>\r\n          </div>\r\n        ))\r\n        : <Skeleton active avatar></Skeleton>}\r\n        <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div className=\"phan-trang\">\r\n        {this.props.search.page !== this.props.search.totalpage &&\r\n        <a href={'/search/'+this.props.id+'/page/'+(parseInt(this.props.search.page)+1)} class=\"quantitychapter\">Trang sau</a>\r\n        }\r\n        {this.props.search.page !== '1' &&\r\n        <a href={'/newnovel/page/'+this.props.id+'/page/'+(parseInt(this.props.search.page)-1)} class=\"page\">Trang trước</a>\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    search: state.Home.search,\r\n  }),\r\n  { fetchSearch }\r\n)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { fetchSearch } from \"../Action/NovelActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../Component/Header\";\r\nimport TopWeakeNovel from \"../Component/TopWeakeNovel\";\r\nimport Genres from \"../Component/Genres\";\r\nimport Footer from \"../Component/Footer\";\r\nimport Search from \"../Component/Search\";\r\n\r\nclass SearchContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    let params = {\r\n      id: this.props.match.params.slug,\r\n      page: this.props.match.params.id\r\n    };\r\n    this.props.fetchSearch(params);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"main_body\">\r\n          <div className=\"cotgiua\">\r\n            <Search id={this.props.match.params.slug}/>\r\n          </div>\r\n          <div className=\"cotphai\">\r\n            <TopWeakeNovel />\r\n            {/* <Genres /> */}\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    search: state.Home.search\r\n  }),\r\n  { fetchSearch }\r\n)(SearchContainer);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,Link, Route } from \"react-router-dom\";\r\nimport HomeContainer from '../Container/HomeContainer';\r\nimport NovelContainer from '../Container/NovelContainer';\r\nimport ChapterContainer from '../Container/ChapterContainer';\r\nimport NewupdateContainer from '../Container/NewupdateContainer';\r\nimport GenresContainer from '../Container/GenresContainer';\r\nimport TopViewContainer from '../Container/TopViewContainer';\r\nimport NewestNovelContainer from '../Container/NewestNovelContainer';\r\nimport CompletedContainer from '../Container/CompletedContainer';\r\nimport SearchContainer from '../Container/SearchContainer';\r\n\r\nclass Routers extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Route exact path=\"/\" component={HomeContainer} />\r\n                <Route exact path=\"/novel/:id\" component={NovelContainer} />\r\n                <Route exact path=\"/novel/:slug/:id\" component={ChapterContainer} />\r\n                <Route exact path=\"/updates/page/:id\" component={NewupdateContainer} />\r\n                <Route exact path=\"/genres/:slug/page/:id\" component={GenresContainer} />\r\n                <Route exact path=\"/hotnovel/page/:id\" component={TopViewContainer} />\r\n                <Route exact path=\"/newnovel/page/:id\" component={NewestNovelContainer} />\r\n                <Route exact path=\"/completed/page/:id\" component={CompletedContainer} />\r\n                <Route exact path=\"/search/:slug/page/:id\" component={SearchContainer} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routers;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Routers from './Router/Routers';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Routers></Routers>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n  items: [],\r\n  item: {},\r\n  mangalist: [],\r\n  mangadetail: [],\r\n  genres: [],\r\n  cate: [],\r\n  hotnovel: [],\r\n  noveldetail: [],\r\n  novelchapter: [],\r\n  newupdate:[],\r\n  genresdetail: [],\r\n  completenovel: [],\r\n  newnovel: [],\r\n  search: []\r\n}\r\n\r\nexport const HomeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_MANGA_HOME':\r\n      return {\r\n        ...state,\r\n            mangalist: action.mangalist\r\n      };\r\n    case 'FETCH_HOT_NOVEL':\r\n      return {\r\n        ...state,\r\n        hotnovel: action.hotnovel\r\n      };\r\n    case 'FETCH_GENRES':\r\n      return {\r\n        ...state,\r\n        genres: action.genres\r\n      };\r\n    case \"FETCH_NOVEL_DETAIL\":\r\n      return {\r\n        ...state,\r\n        noveldetail: action.noveldetail\r\n      };\r\n      case \"FETCH_NOVEL_CHAPTER\":\r\n      return {\r\n        ...state,\r\n        novelchapter: action.novelchapter\r\n      };\r\n      case \"FETCH_NOVEL_NEW_UPDATE\":\r\n      return {\r\n        ...state,\r\n        newupdate: action.newupdate\r\n      };\r\n      case \"FETCH_GENRES_DETAIL\":\r\n      return {\r\n        ...state,\r\n        genresdetail: action.genresdetail\r\n      };\r\n      case \"FETCH_NEW_NOVEL\":\r\n      return {\r\n        ...state,\r\n        newnovel: action.newnovel\r\n      };\r\n      case \"FETCH_COMPLETED_NOVEL\":\r\n      return {\r\n        ...state,\r\n        completenovel: action.completenovel\r\n      };\r\n      case \"FETCH_SEARCH_NOVEL\":\r\n      return {\r\n        ...state,\r\n        search: action.search\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default HomeReducer;\r\n","import { combineReducers } from 'redux';\r\nimport HomeReducer from './HomeReducer';\r\n\r\nexport default combineReducers({\r\n    Home : HomeReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from '../Reducer'\r\n\r\nlet composeEnhancers = null\r\n\r\nif (process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n} else {\r\n    composeEnhancers = compose\r\n}\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Store/Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <App/>\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}